run:
  concurrency: 4
  timeout: 10m
  issues-exit-code: 1
  tests: true
  build-tags: []
  skip-dirs: []
  skip-dirs-use-default: true # skip vendor, third_party, test_data

output:
  # colored-line-number|line-number|json|tab|checkstyle|code-climate, default is "colored-line-number"
  formats:
    - format: colored-line-number
  # print lines of code with issue, default is true
  print-issued-lines: true
  # print linter name in the end of issue text, default is true
  print-linter-name: true
  # make issues output unique by line, default is true
  uniq-by-line: true
  # add a prefix to the output file references; default is no prefix
  path-prefix: ""

linters:
  disable-all: true
  enable:
    - asasalint # Check for pass []any as any in variadic func(...any)
    - asciicheck # Simple linter to check that your code does not contain non-ASCII identifiers
    - bidichk # Checks for dangerous unicode character sequences
    - bodyclose # Checks whether HTTP response body is closed successfully [fast: true, auto-fix: false]
    - containedctx # Containedctx is a linter that detects struct contained context.Context field
    - dogsled # Checks assignments with too many blank identifiers (e.g. x, _, _, _, := f()) [fast: true, auto-fix: false]
    - durationcheck # Check for two durations multiplied together
    - errcheck # Errcheck is a program for checking for unchecked errors in go programs. These unchecked errors can be critical bugs in some cases [fast: true, auto-fix: false]
    - errname # Checks that sentinel errors are prefixed with the Err and error types are suffixed with the Error.
    - exhaustive # Check exhaustiveness of enum switch statements [fast: true, auto-fix: false]
    - exportloopref # An analyzer that finds exporting pointers for loop variables. [fast: true, auto-fix: false]
    - funlen # Tool for detection of long functions [fast: true, auto-fix: false]
    - gocheckcompilerdirectives # Checks that go compiler directive comments (//go:) are valid.
    - gocyclo # Computes and checks the cyclomatic complexity of functions [fast: true, auto-fix: false]
    - gofmt # Gofmt checks whether code was gofmt-ed. By default, this tool runs with -s option to check for code simplification [fast: true, auto-fix: true]
    - goimports # Goimports does everything that gofmt does. Additionally, it checks unused imports [fast: true, auto-fix: true]
    - goprintffuncname # Checks that printf-like functions are named with `f` at the end [fast: true, auto-fix: false]
    - gosimple # Linter for Go source code that specializes in simplifying code
    - govet # Vet examines Go source code and reports suspicious constructs, such as Printf calls whose arguments do not align with the format string [fast: true, auto-fix: false]
    - grouper # An analyzer to analyze expression groups.
    - importas # Enforces consistent import aliases
    - inamedparam # Reports interfaces with unnamed method parameters.
    - ineffassign # Detects when assignments to existing variables are not used [fast: true, auto-fix: false]
    - makezero # Finds slice declarations with non-zero initial length
    - mirror # Reports wrong mirror patterns of bytes/strings usage
    - misspell # Finds commonly misspelled English words in comments [fast: true, auto-fix: true]
    - noctx # Noctx finds sending http request without context.Context [fast: true, auto-fix: false]
    - nolintlint # Reports ill-formed or insufficient nolint directives [fast: true, auto-fix: false]
    - prealloc # Finds slice declarations that could potentially be preallocated [fast: true, auto-fix: false]
    - rowserrcheck # Checks whether Err of rows is checked successfully [fast: true, auto-fix: false]
    - stylecheck # Stylecheck is a replacement for golint [fast: true, auto-fix: false]
    - tenv # tenv is analyzer that detects using os.Setenv instead of t.Setenv since Go1.17
    - typecheck # Like the front-end of a Go compiler, parses and type-checks Go code [fast: true, auto-fix: false]
    - unconvert # Remove unnecessary type conversions [fast: true, auto-fix: false]
    - unused # Checks Go code for unused constants, variables, functions and types [fast: false, auto-fix: false]
    - whitespace # Tool for detection of leading and trailing whitespace [fast: true, auto-fix: true]